#!/usr/bin/env python
"""
Usage:
    lockbox encrypt (--string=STRING | [-] | <input>) [--output=FILE]
    lockbox decrypt (--string=STRING | [-] | <input>) [--output=FILE]
    lockbox --version
    lockbox --help

Arguments:
    input  file to be used for input
           specify '-' to use stdin

Options:
    -s STRING --string=STRING   STRING to be used as the input data for encrypting/decrypting
    -o FILE --output=FILE       file to be used for outputted data
                                specifying an output file with a '.png'
                                extension will write a QR code to FILE
    -h --help                   display this help

Without -o FILE given, lockbox will display data to stdout

Be careful using the -s STRING option on the command line as your unencrypted plaintext may be stored in your history.
Also, when using the -s option, any data provided through stdin will be ignored.
"""
import getpass
import sys

from docopt import docopt
from blessings import Terminal

from lockbox import LockBoxException
from lockbox._version import get_versions
from lockbox.cli import (cli_encrypt,
                         cli_decrypt)

VERSION = get_versions()['version']

term = Terminal()

def main(args):
    infile = args['<input>']
    outfile = args['--output']
    string = args['--string']

    if string:
        string = string.encode('utf-8')

    stdin_data = None
    if not string and (not infile or infile == '-'):
        stdin_data = sys.stdin.read().encode('utf-8')
    data = stdin_data or string

    passphrase = getpass.getpass('Enter passphrase: ').encode('utf-8')

    if args['encrypt']:
        cli_encrypt(passphrase, infile, outfile, data=data)
    elif args['decrypt']:
        cli_decrypt(passphrase, infile, outfile, data=data)

if __name__ == '__main__':
    args = docopt(__doc__, version=VERSION)

    if args['--version']:
        print(VERSION)
    else:
        try:
            main(args)
        except LockBoxException as e:
            print(term.red(str(e)))
